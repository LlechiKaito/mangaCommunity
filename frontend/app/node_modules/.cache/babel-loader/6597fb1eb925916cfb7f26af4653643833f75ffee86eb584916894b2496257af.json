{"ast":null,"code":"var _jsxFileName = \"/frontend/app/src/components/users/ResetPassword.tsx\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../index.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../shared/Header.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useQuery = () => {\n  _s();\n  return new URLSearchParams(useLocation().search);\n};\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nconst ResetPassword = () => {\n  _s3();\n  var _s2 = $RefreshSig$();\n  // ここからやる！\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const navigate = useNavigate();\n  const ForgetLoginIdSubmit = e => {\n    _s2();\n    e.preventDefault();\n    const query = useQuery();\n    const token = query.get('token');\n    const url = \"/users/reset-password?token=\" + token;\n    const redirectUrl = \"/users/login\";\n    try {\n      useEffect(() => {\n        const fetchData = async () => {\n          await axios.put(url, {\n            password: password,\n            password_confirmation: passwordConfirmation\n          });\n        };\n        fetchData;\n        navigate(redirectUrl);\n      }, []);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  _s2(ForgetLoginIdSubmit, \"SCD2u/2Ws51YgbJhV3q6Zm3fxeM=\", false, function () {\n    return [useQuery];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: ForgetLoginIdSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        name: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u78BA\\u8A8D\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        name: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s3(ResetPassword, \"nAs6DzpszrHNJyN0YF+fu2SZKGM=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","Header","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","ResetPassword","_s3","_s2","$RefreshSig$","password","setPassword","passwordConfirmation","setPasswordConfirmation","navigate","ForgetLoginIdSubmit","e","preventDefault","query","token","get","url","redirectUrl","fetchData","put","password_confirmation","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","name","onChange","target","value","_c","$RefreshReg$"],"sources":["/frontend/app/src/components/users/ResetPassword.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../index.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header, { getLocalStorage } from '../shared/Header.tsx';\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst ResetPassword: React.FC = () => {\n    // ここからやる！\n    const [password, setPassword] = useState<string>('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\n\n    const navigate = useNavigate();\n\n    const ForgetLoginIdSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const query = useQuery();\n    const token = query.get('token');\n\n    const url: string = \"/users/reset-password?token=\" + token;\n    const redirectUrl: string = \"/users/login\";\n\n    try {\n      useEffect(() => {\n        const fetchData = async () => {\n          await axios.put(url, {\n            password: password,\n            password_confirmation: passwordConfirmation\n          });\n        }\n        fetchData;\n        navigate(redirectUrl);\n      }, []);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \n  return (\n    <div>\n      <Header />\n      <h1></h1>\n      <form onSubmit={ForgetLoginIdSubmit}>\n      <input\n          type='text'\n          placeholder='パスワード'\n          name={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type='text'\n          placeholder='確認パスワード'\n          name={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n        />\n        <button type=\"submit\">送信</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}