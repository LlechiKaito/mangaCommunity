{"ast":null,"code":"var _jsxFileName = \"/frontend/app/src/components/shared/Header.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport '../../index.css';\nimport { useNavigate } from 'react-router-dom';\n\n// localStorageに格納されている情報（user_id, nameなど）の取得\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalStorage = key => {\n  if (!key) {\n    console.error(\"keyが空です。\");\n    return;\n  }\n  const value = localStorage.getItem(key);\n  if (!value) {\n    console.error(\"localStorageにこのkeyは存在しません。\");\n    return;\n  }\n  const item = JSON.parse(value);\n  const nowTime = Date.now();\n  if (item.expiry < nowTime) {\n    localStorage.removeItem(key);\n    console.error(\"このキーは有効期限が切れています。\");\n    return;\n  }\n  return item.value;\n};\n\n// ログインしているかどうかの関数\nconst isLoggedIn = () => {\n  let key = \"user_id\";\n  const localUserId = getLocalStorage(key);\n  if (localUserId) {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const onLogout = async e => {\n    e.preventDefault();\n    let url = \"/users/logout\";\n    const afterUrl = window.location.pathname;\n    try {\n      await axios.post(url);\n      localStorage.clear();\n      navigate(afterUrl);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  let key = \"user_id\";\n  const localUserId = getLocalStorage(key);\n  key = \"name\";\n  console.log(key);\n  // const localName: string = getLocalStorage(key);\n\n  // const AuthenticationComponent = () => {\n  //   if (isLoggedIn()){\n  //     return (\n  //       <div>\n  //         <button onClick={onLogout}>ログアウト</button>\n  //         <div>{localName}でログインしています。</div>\n  //         <Link to={`/users/${localUserId}`}>プロフィールへ</Link>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div>\n  //         <a href=\"/users/login\">ログイン</a>\n  //         <a href=\"/users/register\">新規登録</a>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"\\u30C8\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3078\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nexport default Header;\nexport { getLocalStorage };\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","axios","useNavigate","jsxDEV","_jsxDEV","getLocalStorage","key","console","error","value","localStorage","getItem","item","JSON","parse","nowTime","Date","now","expiry","removeItem","isLoggedIn","localUserId","Header","_s","navigate","onLogout","e","preventDefault","url","afterUrl","window","location","pathname","post","clear","log","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/frontend/app/src/components/shared/Header.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../index.css';\nimport { Link, useNavigate } from 'react-router-dom';\n\n// localStorageに格納されている情報（user_id, nameなど）の取得\nconst getLocalStorage = (key: string) => {\n  if (!key) {\n    console.error(\"keyが空です。\");\n    return ;\n  }\n\n  const value = localStorage.getItem(key);\n\n  if (!value) {\n    console.error(\"localStorageにこのkeyは存在しません。\");\n    return ;\n  }\n\n  const item = JSON.parse(value);\n  const nowTime: number = Date.now();\n\n  if (item.expiry < nowTime) {\n    localStorage.removeItem(key);\n    console.error(\"このキーは有効期限が切れています。\");\n    return ;\n  }\n  return item.value;\n}\n\n// ログインしているかどうかの関数\nconst isLoggedIn = () => {\n  let key: string = \"user_id\";\n  const localUserId: number = getLocalStorage(key);\n  if (localUserId) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst Header: React.FC = () => {\n\n  const navigate = useNavigate();\n\n  const onLogout = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    let url: string = \"/users/logout\";\n    const afterUrl: string = window.location.pathname;\n\n    try {\n      await axios.post(url);\n      localStorage.clear();\n      navigate(afterUrl);\n    } catch (error) {\n      console.error(error);\n    }\n    \n  }\n\n  let key: string = \"user_id\";\n  const localUserId: number = getLocalStorage(key);\n  key = \"name\";\n  console.log(key);\n  // const localName: string = getLocalStorage(key);\n\n\n  // const AuthenticationComponent = () => {\n  //   if (isLoggedIn()){\n  //     return (\n  //       <div>\n  //         <button onClick={onLogout}>ログアウト</button>\n  //         <div>{localName}でログインしています。</div>\n  //         <Link to={`/users/${localUserId}`}>プロフィールへ</Link>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div>\n  //         <a href=\"/users/login\">ログイン</a>\n  //         <a href=\"/users/register\">新規登録</a>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n      <a href=\"/\">トップページへ</a>\n      {/* <AuthenticationComponent /> */}\n    </div>\n  );\n}\n\nexport default Header;\nexport { getLocalStorage };"],"mappings":";;AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAAeC,WAAW,QAAQ,kBAAkB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAIC,GAAW,IAAK;EACvC,IAAI,CAACA,GAAG,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,UAAU,CAAC;IACzB;EACF;EAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC;EAEvC,IAAI,CAACG,KAAK,EAAE;IACVF,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAC3C;EACF;EAEA,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;EAC9B,MAAMM,OAAe,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAElC,IAAIL,IAAI,CAACM,MAAM,GAAGH,OAAO,EAAE;IACzBL,YAAY,CAACS,UAAU,CAACb,GAAG,CAAC;IAC5BC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;IAClC;EACF;EACA,OAAOI,IAAI,CAACH,KAAK;AACnB,CAAC;;AAED;AACA,MAAMW,UAAU,GAAGA,CAAA,KAAM;EACvB,IAAId,GAAW,GAAG,SAAS;EAC3B,MAAMe,WAAmB,GAAGhB,eAAe,CAACC,GAAG,CAAC;EAChD,IAAIe,WAAW,EAAE;IACf,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9B,MAAMuB,QAAQ,GAAG,MAAOC,CAAkB,IAAK;IAC7CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIC,GAAW,GAAG,eAAe;IACjC,MAAMC,QAAgB,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAEjD,IAAI;MACF,MAAM/B,KAAK,CAACgC,IAAI,CAACL,GAAG,CAAC;MACrBlB,YAAY,CAACwB,KAAK,CAAC,CAAC;MACpBV,QAAQ,CAACK,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EAEF,CAAC;EAED,IAAIF,GAAW,GAAG,SAAS;EAC3B,MAAMe,WAAmB,GAAGhB,eAAe,CAACC,GAAG,CAAC;EAChDA,GAAG,GAAG,MAAM;EACZC,OAAO,CAAC4B,GAAG,CAAC7B,GAAG,CAAC;EAChB;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjC,OAAA;MAAGkC,IAAI,EAAC,GAAG;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAEV,CAAC;AAAAnB,EAAA,CApDKD,MAAgB;EAAA,QAEHpB,WAAW;AAAA;AAAAyC,EAAA,GAFxBrB,MAAgB;AAsDtB,eAAeA,MAAM;AACrB,SAASjB,eAAe;AAAG,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}